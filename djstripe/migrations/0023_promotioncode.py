# Generated by Django 4.1.6 on 2023-04-22 03:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import djstripe.fields


class Migration(migrations.Migration):
    dependencies = [
        ("djstripe", "0022_sourcetransaction"),
    ]

    operations = [
        migrations.CreateModel(
            name="PromotionCode",
            fields=[
                ("djstripe_created", models.DateTimeField(auto_now_add=True)),
                ("djstripe_updated", models.DateTimeField(auto_now=True)),
                (
                    "djstripe_id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("id", djstripe.fields.StripeIdField(max_length=255, unique=True)),
                (
                    "livemode",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Null here indicates that the livemode status is unknown or was previously unrecorded. Otherwise, this field indicates whether this record comes from Stripe test mode or live mode operation.",
                        null=True,
                    ),
                ),
                ("created", djstripe.fields.StripeDateTimeField(blank=True, null=True)),
                ("metadata", djstripe.fields.JSONField(blank=True, null=True)),
                (
                    "active",
                    models.BooleanField(
                        help_text="Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid."
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
                        max_length=500,
                    ),
                ),
                ("coupon", djstripe.fields.JSONField()),
                (
                    "expires_at",
                    djstripe.fields.StripeDateTimeField(blank=True, null=True),
                ),
                (
                    "max_redemptions",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The maximum number of times this promotion code can be redeemed.",
                        null=True,
                    ),
                ),
                (
                    "times_redeemed",
                    models.PositiveIntegerField(
                        help_text="The number of times this promotion code has been used."
                    ),
                ),
                ("restrictions", djstripe.fields.JSONField(blank=True, null=True)),
                (
                    "customer",
                    djstripe.fields.StripeForeignKey(
                        blank=True,
                        help_text="The customer that this promotion code can be used for. If empty, this promotion code can be used by all customers.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djstripe.customer",
                        to_field=settings.DJSTRIPE_FOREIGN_KEY_TO_FIELD,
                    ),
                ),
                (
                    "djstripe_owner_account",
                    djstripe.fields.StripeForeignKey(
                        blank=True,
                        help_text="The Stripe Account this object belongs to.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djstripe.account",
                        to_field=settings.DJSTRIPE_FOREIGN_KEY_TO_FIELD,
                    ),
                ),
            ],
            options={
                "get_latest_by": "created",
                "abstract": False,
            },
        ),
    ]
