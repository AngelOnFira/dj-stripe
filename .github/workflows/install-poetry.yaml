name: Setup and install poetry

on:
  workflow_call:
      inputs:
        POETRY_VERSION:
            required: true
            type: string
        POETRY_VIRTUALENVS_IN_PROJECT:
            required: true
            type: string
        python_version:
            required: true
            type: string

env:
  POETRY_VERSION: ${{ inputs.POETRY_VERSION }}
  POETRY_VIRTUALENVS_IN_PROJECT: ${{ inputs.POETRY_VIRTUALENVS_IN_PROJECT }}


jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true


    steps:

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install poetry (${{ env.POETRY_VERSION }}) binary on runner
        run: |
          curl -sL https://install.python-poetry.org | python - --version ${{ env.POETRY_VERSION }}

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: .venv
          key: venv-${{ inputs.python_version }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv
